@mixin shared-extras {
  // Tables
  @if $enable-tables {
    table {
      border-collapse: collapse;

      thead {
        color: $color-primary;
        font-weight: bold;
        text-transform: uppercase;
      }

      tr:nth-child(even) {
        background: $tables-stripe-background;
      }

      td, th {
        text-align: left;
      }
    }
  }

  // Definition Lists
  @if $enable-definition-list {
    dt {
      display: block;
      font-weight: bold;
    }

    dd {
      display: block;
    }
  }

  // Strikethrough
  @if $enable-strikethrough {
    s, del {
      text-decoration: line-through;
    }
  }

  // Sticky Containers
  @if $enable-container-sticky {
    .sticky {
      position: sticky;
      top: 0;
      z-index: 9;
    }
  }

  // Flex base class
  %flex {
    align-items: stretch;
    display: flex;
    flex-wrap: wrap;
  }

  // Flex Containers
  @if $enable-container-flex {
    .flex {
      @extend %flex;
      justify-content: space-around;
    }
  }

  // Columns
  @if $enable-container-columns {
    .columns {
      @extend %flex;

      & > * {
        box-sizing: border-box;
        display: block;
        width: 100%;
      }
    }
  }

  // Left and Right Aligned Containers
  @if $enable-container-float {
    .float.left {
      float: left;
    }

    .float.right {
      float: right;
    }
  }

  // Left and Right Text Aligned Containers
  @if $enable-container-align {
    .left.align,
    .left.align p {
      text-align: left;
    }

    .right.align,
    .right.align p {
      text-align: right;
    }

    .center.align,
    .center.align p {
      text-align: center;
    }
  }

  // Columns
  @if $enable-container-columns {
    $column-count: 2;
    @while $column-count <= $container-columns-max {
      .#{number($column-count)}.columns > *:nth-child(#{$column-count}n + 1) {
        margin-left: 0;
      }

      .#{number($column-count)}.columns > *:nth-child(#{$column-count}n) {
        margin-right: 0;
      }
      
      $column-count: $column-count + 1;
    }
  }

  // Syntax Highlighting
  @if $enable-syntax-highlighting {
    pre code {
      @each $selector, $color in $syntax-highlighting-colors {
        #{$selector} {
          color: #{$color};
        }
      }
    }
  }
}