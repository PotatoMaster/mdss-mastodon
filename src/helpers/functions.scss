@function pow($number, $exponent) {
  $value: 1;

  @if $exponent > 0 {
    @for $i from 1 through $exponent {
      $value: $value * $number;
    }
  } @else if $exponent < 0 {
    @for $i from 1 through -$exponent {
      $value: $value / $number;
    }
  }

  @return $value;
}

@function nth-root($value, $n) {
  $precision: 1e-10;
  $previous: 0;
  $current: $value;

  @while abs($current - $previous) > $precision {
    $previous: $current;
    $current: 1 / $n * (($n - 1) * $previous + ($value / pow($previous, $n - 1)));
  }

  @return $current;
}

@function luminance($color) {
  $R: red($color) / 255;
  $G: green($color) / 255;
  $B: blue($color) / 255;

  @if $R <= 0.03928 {
    $R: $R / 12.92;
  } @else {
    $R: nth-root(pow($R + 0.055 / 1.055, 24), 10);
  }

  @if $G <= 0.03928 {
    $G: $G / 12.92;
  } @else {
    $G: nth-root(pow($G + 0.055 / 1.055, 24), 10);
  }

  @if $B <= 0.03928 {
    $B: $B / 12.92;
  } @else {
    $B: nth-root(pow($B + 0.055 / 1.055, 24), 10);
  }

  @return $R * 0.2126 + $G * 0.7152 + $B * 0.0722;
}

@function contrast($color1, $color2) {
  @return (luminance($color1) + 0.05) / (luminance($color2) + 0.05);
}

@function contrast-color($background, $foreground: $root-font-color) {
  $aa-minimum-contrast: 4.5;

  @if contrast($foreground, $background) >= $aa-minimum-contrast {
    @return $foreground;
  } @else {
    @if contrast($color-white, $background) >= $aa-minimum-contrast {
      @return $color-white;
    } @else {
      @return $color-black;
    }
  }
}

@function number($number) {
  $number-names: ("one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten");

  @return nth($number-names, $number);
}

@function rem($multiplier) {
  @return $multiplier * $root-font-size;
}

@function column-width($column-count, $column-spacing) {
  $full-width: #{100% / $column-count};
  $space-per-column: #{2 * ($column-count - 1) / ($column-count) * $column-spacing};

  @return calc(#{$full-width} - #{$space-per-column});
}

@function lighter($color, $level) {
  $offset: $level * 10;
  @return lighten($color, $offset);
}

@function darker($color, $level) {
  $offset: $level * 10;
  @return darken($color, $offset);
}
