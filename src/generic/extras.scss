@import "helpers/components";

@mixin generic-extras {
  // Numbered Elements
  @if $enable-auto-numbering {
    $counters: "";

    $level: 1;
    @while $level <= length($auto-numbering-headings) {
      $heading: nth($auto-numbering-headings, $level);
      $counters: #{$counters} #{$heading};

      $counter-resets: "";
      @if $level < length($auto-numbering-headings) {
        @for $i from $level + 1 through length($auto-numbering-headings) {
          $counter-resets: #{$counter-resets} #{nth($auto-numbering-headings, $i)}
        }
      }

      $label: "";
      @for $i from 1 through $level {
        $label: #{$label} counter(#{nth($auto-numbering-headings, $i)});
        @if ($i != $level) {
          $label: #{$label} '"."'
        } @else {
          $label: #{$label} '"\00a0"'
        }
      }

      #{$heading} {
        position: relative;
        counter-increment: #{$heading};
        counter-reset: #{$counter-resets};
      }

      #{$heading}::before {
        @include to-left-margin {
          content: #{$label};
        }
      }

      $level: $level + 1;
    }

    @each $element in $auto-numbering-elements {
      $counters: #{$counters} #{$element};

      #{$element} {
        position: relative;
        counter-increment: #{$element};
      }

      #{$element}::before {
        @include to-right-margin {
          content: "(" counter(#{$element}) ")";
        }
      }
    }

    @include on-root {
      counter-reset: #{$counters};
    }
  }

  // Tables
  @if $enable-tables {
    table {
      margin: $spacing-medium auto;

      thead {
        border-bottom: solid $root-font-color 1px;
        @include font($heading-font);
      }
  
      th, td {
        padding: $spacing-small $spacing-medium;
      }
    }
  }

  // Definition Lists
  @if $enable-definition-list {
    dd {
      margin-left: $spacing-huge;
    }
  }

  // Left and Right Aligned Containers
  @if $enable-container-float {
    .left {
      margin-right: $spacing-medium;
    }

    .right {
      margin-left: $spacing-medium;
    }
  }

  // Columns
  @if $enable-container-columns {
    $column-spacing: 2 * $spacing-small;

    .columns > * {
      margin: $column-spacing;
    }

    @media (max-width: $breakpoint-small - 1) {
      .columns > * {
        margin: $column-spacing 0;
      }
    }

    @media (min-width: $breakpoint-small) and (max-width: $breakpoint-large - 1) {
      $column-count: 2;
      @while $column-count <= $container-columns-max {
        $actual-column-count: ceil($column-count / 2);

        .#{number($column-count)}.columns > * {
          width: column-width($actual-column-count, $column-spacing);

          &:nth-child(#{$actual-column-count}n + 1) {
            margin-left: 0;
          }

          &:nth-child(#{$actual-column-count}n) {
            margin-right: 0;
          }
        }

        $column-count: $column-count + 1;
      }
    }

    @media (min-width: $breakpoint-large) {
      $column-count: 2;
      @while $column-count <= $container-columns-max {
        .#{number($column-count)}.columns > * {
          width: column-width($column-count, $column-spacing);

          &:nth-child(#{$column-count}n + 1) {
            margin-left: 0;
          }

          &:nth-child(#{$column-count}n) {
            margin-right: 0;
          }
        }
        
        $column-count: $column-count + 1;
      }
    }
  }

  // Custom Containers (Cards)
  @if $enable-container-card {
    @each $name, $color in $container-card-light-list {
      .#{$name} {
        @include card(
          $root-font,
          $root-font-size,
          $root-font-color,
          desaturate(lighten($color, 45%), 25%),
          $color
        );
      }
    }

    @each $name, $color in $container-card-dark-list {
      .#{$name} {
        @include card(
          $root-font,
          $root-font-size,
          $color-white,
          $color,
          none
        );
      }
    }
  }

  // Sticky Containers
  @if $enable-container-sticky {
    .sticky {
      background: $root-background;
      padding: $spacing-medium 0;
    }
  }
}