@mixin generic-extras {
  // Manual Page Break
  @if $enable-break-manual {
    hr {
      visibility: hidden;
      break-after: always;
      page-break-after: always;
      -webkit-column-break-after: always;
    }
  }

  // Numbered Elements
  @if $enable-auto-numbering {
    $counters: "";

    $level: 1;
    @while $level <= length($auto-numbering-headings) {
      $heading: nth($auto-numbering-headings, $level);
      $counters: #{$counters} #{$heading};

      $counter-resets: "";
      @if $level < length($auto-numbering-headings) {
        @for $i from $level + 1 through length($auto-numbering-headings) {
          $counter-resets: #{$counter-resets} #{nth($auto-numbering-headings, $i)};
        }
      }

      $label: "";
      @for $i from 1 through $level {
        $label: #{$label} counter(#{nth($auto-numbering-headings, $i)});
        @if ($i != $level) {
          $label: #{$label} '"."';
        } @else {
          $label: #{$label} '"\00a0"';
        }
      }

      #{$heading} {
        counter-increment: #{$heading};
        counter-reset: #{$counter-resets};
      }

      #{$heading}::before {
        @include to-left-margin {
          content: #{$label};
        }
      }

      $level: $level + 1;
    }

    @each $element in $auto-numbering-elements {
      $counters: #{$counters} #{$element};

      #{$element} {
        position: relative;
        counter-increment: #{$element};
      }

      #{$element}::before {
        @include to-right-margin {
          content: "(" counter(#{$element}) ")";
        }
      }
    }

    @include on-root {
      counter-reset: #{$counters};
    }
  }

  // Syntax Highlighting
  @if $enable-syntax-highlighting {
    pre code {
      @each $selector, $color in $syntax-highlighting-colors {
        #{$selector} {
          color: #{$color};
        }
      }
    }
  }
}
