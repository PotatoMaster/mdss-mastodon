@mixin generic-utilities {
  @if $enable-utilities {
    // Left and Right Aligned Containers
    .aligned {
      overflow: hidden;
    }

    .left.aligned,
    .left.aligned p {
      text-align: left;
    }

    .right.aligned,
    .right.aligned p {
      text-align: right;
    }

    .center.aligned,
    .center.aligned p {
      text-align: center;
    }

    // Left and Right Floated Containers
    .left.floated {
      float: left;
      margin-right: $spacing-500;
    }

    .right.floated {
      float: right;
      margin-left: $spacing-500;
    }

    // Flex Containers
    .flex {
      @include flex;

      .evenly.aligned {
        justify-content: space-evenly;
      }
    }

    // Columns
    $column-spacing: 2 * $spacing-300;

    .columns {
      @include flex;

      & > * {
        box-sizing: border-box;
        display: block;
        margin-left: 0;
        margin-right: 0;
        width: 100%;
      }
    }

    $container-columns-max: 5;

    // Medium
    @media (min-width: $breakpoint-small) and (max-width: $breakpoint-large - 1) {
      $column-count: 2;
      @while $column-count <= $container-columns-max {
        $actual-column-count: $column-count;

        @if ($column-count > 2) {
          $actual-column-count: ceil($column-count / 2);
        }

        .#{number($column-count)}.columns > * {
          width: column-width($actual-column-count, $column-spacing);
        }

        $column-count: $column-count + 1;
      }
    }

    // Large
    @media (min-width: $breakpoint-large) {
      $column-count: 2;
      @while $column-count <= $container-columns-max {
        .#{number($column-count)}.columns > * {
          width: column-width($column-count, $column-spacing);
        }

        $column-count: $column-count + 1;
      }
    }

    // Colors
    @each $name, $color in $utilities-colors {
      .#{$name} {
        background: $color;
        color: contrast-color($color, $color-white);

        &.outline {
          border-color: darker($color, 1);
          background: none;
          color: darker($color, 1);
        }

        &.flat {
          border-color: transparent;
          background: none;
          color: darker($color, 1);
        }
      }
    }

    @each $name, $color in $utilities-colors {
      .#{$name}-text {
        color: darker($color, 1);
      }
    }
  }
}
